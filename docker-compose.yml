version: '3.8'
services:

  db_test:
    container_name: db_test
    env_file:
      - ./.env
    image: postgres:16
    restart: always
    environment:
      PGUSER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME_TEST}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME_TEST}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5434:5432"

  db:
    container_name: db
    env_file:
      - ./.env
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      PGUSER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5433:5432"
    volumes:
      - ./app/init_db:/docker-entrypoint-initdb.d
      - ./pgdata:/var/lib/postgresql/data

  app:
    container_name: app
    env_file:
      - ./.env
    build:
      context: ./app
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:8.6
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "password"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"

volumes:
  pgadmin-data:
  pgdata:
